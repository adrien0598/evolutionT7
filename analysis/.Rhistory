################################################################################
### Fig2 : Mutation in the targeted zone vs non targeted zone (for each pol) ###
################################################################################
# Packages
library(ggplot2)
# Data
setwd("~/analysis") # set to source file location
#setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # (if using Rstudio)
load("variants.rds")
setwd("D:/adrie/Documents/igem/git/evolutionT7/analysis")
load("variants.rds")
# Some parsing
ortho1 = data.frame(variants[variants$Depth > 20,])
ortho1$Region = as.factor(ortho1$Region)
ortho1$Mutator = as.factor(ortho1$Mutator)
mutator = c()
zone = c()
mutations = c()
pol = c()
for (i in levels(ortho1$Mutator)){
for (j in levels(ortho1$Region)){
mutations = c(mutations, (sum(ortho1$Occurences[ortho1$Mutator == i & ortho1$Region == j])/sum(ortho1$Depth[ortho1$Mutator == i & ortho1$Region == j]))*1000)
zone = c(zone, j)
if (substring(i, nchar(i)-2, nchar(i)) == "-T7"){
if (nchar(substring(i, 1,nchar(i)-3)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-3))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "T7")
}
else{
if (nchar(substring(i, 1,nchar(i)-4)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-4))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "CGG")
}
}
}
ortho = data.frame(mutator = mutator, zone = zone, mutations = mutations, polymerase = pol)
View(ortho)
View(ortho1)
mutator = c()
zone = c()
mutations = c()
pol = c()
for (i in levels(ortho1$Mutator)){
for (j in levels(ortho1$Region)){
mutations = c(mutations, (sum(ortho1$Occurences[ortho1$Mutator == i & ortho1$Region == j])/sum(ortho1$Depth[ortho1$Mutator == i & ortho1$Region == j]))*1000)
zone = c(zone, j)
print(substring(i, nchar(i)-2, nchar(i)))
if (substring(i, nchar(i)-2, nchar(i)) == "-T7"){
print('oui')
if (nchar(substring(i, 1,nchar(i)-3)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-3))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "T7")
}
else{
print('non')
if (nchar(substring(i, 1,nchar(i)-4)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-4))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "CGG")
}
}
}
mutator = c()
zone = c()
mutations = c()
pol = c()
for (i in levels(ortho1$Mutator)){
for (j in levels(ortho1$Region)){
mutations = c(mutations, (sum(ortho1$Occurences[ortho1$Mutator == i & ortho1$Region == j])/sum(ortho1$Depth[ortho1$Mutator == i & ortho1$Region == j]))*1000)
zone = c(zone, j)
print(substring(i, nchar(i)-1, nchar(i)))
if (substring(i, nchar(i)-2, nchar(i)) == "T7"){
print('oui')
if (nchar(substring(i, 1,nchar(i)-3)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-3))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "T7")
}
else{
print('non')
if (nchar(substring(i, 1,nchar(i)-4)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-4))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "CGG")
}
}
}
ortho = data.frame(mutator = mutator, zone = zone, mutations = mutations, polymerase = pol)
pol = c()
for (i in levels(ortho1$Mutator)){
for (j in levels(ortho1$Region)){
mutations = c(mutations, (sum(ortho1$Occurences[ortho1$Mutator == i & ortho1$Region == j])/sum(ortho1$Depth[ortho1$Mutator == i & ortho1$Region == j]))*1000)
zone = c(zone, j)
print(substring(i, nchar(i)-1, nchar(i)))
if (substring(i, nchar(i)-1, nchar(i)) == "T7"){
print('oui')
if (nchar(substring(i, 1,nchar(i)-3)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-3))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "T7")
}
else{
print('non')
if (nchar(substring(i, 1,nchar(i)-4)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-4))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "CGG")
}
}
}
ortho = data.frame(mutator = mutator, zone = zone, mutations = mutations, polymerase = pol)
mutator = c()
zone = c()
mutations = c()
pol = c()
for (i in levels(ortho1$Mutator)){
for (j in levels(ortho1$Region)){
mutations = c(mutations, (sum(ortho1$Occurences[ortho1$Mutator == i & ortho1$Region == j])/sum(ortho1$Depth[ortho1$Mutator == i & ortho1$Region == j]))*1000)
zone = c(zone, j)
print(substring(i, nchar(i)-1, nchar(i)))
if (substring(i, nchar(i)-1, nchar(i)) == "T7"){
print('oui')
if (nchar(substring(i, 1,nchar(i)-3)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-3))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "T7")
}
else if (substring(i, nchar(i)-2, nchar(i)) == "CGG"){
print('non')
if (nchar(substring(i, 1,nchar(i)-4)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-4))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "CGG")
}
else {
pol = c(pol, "no")
mutator = c(mutator, "no")
}
}
}
ortho = data.frame(mutator = mutator, zone = zone, mutations = mutations, polymerase = pol)
# Graphs
gg <- ggplot(ortho[ortho$polymerase != "no",]) +
aes(x = polymerase, y = mutations, fill = zone) +
xlab("Polymerase") +
ylab("Mutations (/Kb)") +
geom_boxplot()
gg2 <- ggplot(ortho[ortho$polymerase != "no" & ortho$mutator != "no",]) +
aes(x = polymerase, y = mutations, fill = zone) +
xlab("Polymerase") +
ylab("Mutations (/Kb)") +
geom_boxplot()
# Plot
gg
gg2
ggsave("Figure/Fig.2.png",
plot = gg,
width = 25,
height = 20,
units = "cm",
dpi = 300)
ggsave("Figure/Fig.2*.png",
plot = gg2,
width = 25,
height = 20,
units = "cm",
dpi = 300)
# Calc mut
tmp = data.frame(variants[(variants$Region == "targeted" & variants$Depth > 30),])
tmp$Mutator = as.factor(tmp$Mutator)
mutations = c()
mutator = c()
for (i in levels(tmp$Mutator)){
mutator = c(mutator, as.character(i))
mutations = c(mutations, (sum(tmp$Occurences[tmp$Mutator == i & tmp$Region == j])/sum(tmp$Depth[tmp$Mutator == i & tmp$Region == j]))*1000)
}
tmp = data.frame(Mutator = mutator, Mutations = mutations)
# Graphs
gg <- ggplot(tmp) +
aes(x = Mutator, y = Mutations) +
xlab("Mutator") +
ylab("Mutations (/Kb)") +
geom_col() +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_discrete(name ="Mutator",
limits=c("pSEVA221", "T7", "AID-T7", "pmCDAI-T7", "rAPOBEC1-T7",
"TadA*-T7", "evoAPOBEC1-BE4max-T7", "evo-CDA1-BE4max-T7",
"ABE8.20-m-T7", "pSEVA471", "CGG", "AID-CGG", "pmCDA1-CGG", "rAPOBEC1-CGG",
"TadA*-CGG", "evoAPOBEC1-BE4max-CGG", "evo-CDA1-BE4max-CGG",
"ABE8.20-m-CGG"))
#Parse2
tmp = data.frame(variants[(variants$Region == "targeted" & variants$Depth > 30),])
tmp$Mutator = as.factor(tmp$Mutator)
mutations = c()
mutator = c()
batch = c()
for (i in levels(tmp$Mutator)){
mutator = c(mutator, rep(as.character(i),2))
mutations = c(mutations, (sum(tmp$Occurences[tmp$Mutator == i & tmp$Region == j & tmp$Batch == "A"])/sum(tmp$Depth[tmp$Mutator == i & tmp$Region == j & tmp$Batch == "A"]))*1000)
batch = c(batch, "A")
mutations = c(mutations, (sum(tmp$Occurences[tmp$Mutator == i & tmp$Region == j & tmp$Batch == "D"])/sum(tmp$Depth[tmp$Mutator == i & tmp$Region == j & tmp$Batch == "D"]))*1000)
batch = c(batch, "D")
}
tmp = data.frame(Mutator = mutator, Mutations = mutations, Batch = batch)
#Graphs2
gg2 <- ggplot(tmp) +
aes(x = Mutator, y = Mutations, fill = Batch) +
xlab("Mutator") +
ylab("Mutations (/Kb)") +
geom_col(position = "dodge") +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_discrete(name ="Mutator",
limits=c("pSEVA221", "T7", "AID-T7", "pmCDAI-T7", "rAPOBEC1-T7",
"TadA*-T7", "evoAPOBEC1-BE4max-T7", "evo-CDA1-BE4max-T7",
"ABE8.20-m-T7", "pSEVA471", "CGG", "AID-CGG", "pmCDA1-CGG", "rAPOBEC1-CGG",
"TadA*-CGG", "evoAPOBEC1-BE4max-CGG", "evo-CDA1-BE4max-CGG",
"ABE8.20-m-CGG"))
# Plot
gg
gg2
# Calc mut
tmp = data.frame(variants[(variants$Region == "targeted" & variants$Depth > 40),])
tmp$Mutator = as.factor(tmp$Mutator)
mutations = c()
mutator = c()
for (i in levels(tmp$Mutator)){
mutator = c(mutator, as.character(i))
mutations = c(mutations, (sum(tmp$Occurences[tmp$Mutator == i & tmp$Region == j])/sum(tmp$Depth[tmp$Mutator == i & tmp$Region == j]))*1000)
}
tmp = data.frame(Mutator = mutator, Mutations = mutations)
# Graphs
gg <- ggplot(tmp) +
aes(x = Mutator, y = Mutations) +
xlab("Mutator") +
ylab("Mutations (/Kb)") +
geom_col() +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_discrete(name ="Mutator",
limits=c("pSEVA221", "T7", "AID-T7", "pmCDAI-T7", "rAPOBEC1-T7",
"TadA*-T7", "evoAPOBEC1-BE4max-T7", "evo-CDA1-BE4max-T7",
"ABE8.20-m-T7", "pSEVA471", "CGG", "AID-CGG", "pmCDA1-CGG", "rAPOBEC1-CGG",
"TadA*-CGG", "evoAPOBEC1-BE4max-CGG", "evo-CDA1-BE4max-CGG",
"ABE8.20-m-CGG"))
gg
type = c()
type_only = c()
sens = c()
pol = c()
tmp <- data.frame(variants[variants$Depth > 20,])
for (i in 1:nrow(tmp)) {
if (substring(tmp$Mutator[i], nchar(tmp$Mutator[i])-2, nchar(tmp$Mutator[i])) == "CGG"){
pol = c(pol, "CGG")
}
else if (substring(tmp$Mutator[i], nchar(tmp$Mutator[i])-1, nchar(tmp$Mutator[i])) == "T7"){
pol = c(pol, "T7")
}
else {
pol = c(pol, "no")
}
if (tmp$Reference[i] == "C" & tmp$Mutation[i] == "T"){
type = c(type, "Cytosine_forward")
type_only = c(type_only, "Cytosine")
sens = c(sens, "Forward")
}
else if (tmp$Reference[i] == "G" & tmp$Mutation[i] == "A"){
type = c(type, "Cytosine_reverse")
type_only = c(type_only, "Cytosine")
sens = c(sens, "Reverse")
}
else if (tmp$Reference[i] == "A" & tmp$Mutation[i] == "G"){
type = c(type, "Adenine_forward")
type_only = c(type_only, "Adenine")
sens = c(sens, "Forward")
}
else if (tmp$Reference[i] == "T" & tmp$Mutation[i] == "C"){
type = c(type, "Adenine_reverse")
type_only = c(type_only, "Adenine")
sens = c(sens, "Reverse")
}
else {
type = c(type, "uncategorized")
type_only = c(type_only, "uncategorized")
sens = c(sens, "uncategorized")
}
}
tmp[["Mutation_type"]] = type
tmp[["Orientation"]] = sens
tmp[["Type"]] = type_only
tmp[["Polymerase"]] = pol
View(tmp)
sum(tmp$Occurences[tmp$Mutator == "T7",])
sum(tmp$Occurences[tmp$Mutator == "T7"])
sum(1*tmp$Mutator == "T7")
sum(1*(tmp$Mutator == "T7"))
gg <- ggplot(tmp[tmp$Mutator = "T7",]) +
aes(x = Mutator, fill = Mutation_type) +
geom_bar() +
theme(axis.text.x = element_text(angle=45, hjust = 1))
gg <- ggplot(tmp[tmp$Mutator == "T7",]) +
aes(x = Mutator, fill = Mutation_type) +
geom_bar()
gg
gg4 <- ggplot(tmp[(tmp$Batch == "A" & tmp$Mutator != "no"),]) +
aes(x = Polymerase, fill = Orientation) +
geom_bar()
gg5 <- ggplot(tmp[(tmp$Batch == "A" & tmp$Mutator != "no" & tmp$Mutator != "T7" & tmp$Mutator != "CGG"),]) +
aes(x = Polymerase, fill = Orientation) +
geom_bar()
# Plot
ggsave("Figure/Fig.4-d.png",
plot = gg4,
width = 25,
height = 20,
units = "cm",
dpi = 300)
ggsave("Figure/Fig.4-d+.png",
plot = gg5,
width = 25,
height = 20,
units = "cm",
dpi = 300)
gg6 <- ggplot(tmp[(tmp$Batch == "A" & tmp$Mutator != "no" & tmp$Mutator != "T7" & tmp$Mutator != "CGG"),]) +
aes(x = Polymerase, fill = Orientation) +
geom_bar(position = "fill")
gg6
ggsave("Figure/Fig.4-d++.png",
plot = gg5,
width = 25,
height = 20,
units = "cm",
dpi = 300)
ggsave("Figure/Fig.4-d++.png",
plot = gg6,
width = 25,
height = 20,
units = "cm",
dpi = 300)
