xlab("Mutator") +
ylab("variant read / total") +
geom_jitter(color = rep, alpha = 0.5) +
geom_boxplot(alpha = 0.5, outlier.size=0, outlier.shape=NA) +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_discrete(name ="Mutator",
limits=c("pSEVA221", "T7", "AID-T7", "pmCDAI-T7", "rAPOBEC1-T7",
"TadA*-T7", "evoAPOBEC1-BE4max-T7", "evo-CDA1-BE4max-T7",
"ABE8.20-m-T7", "pSEVA471", "CGG", "AID-CGG", "pmCDA1-CGG", "rAPOBEC1-CGG",
"TadA*-CGG", "evoAPOBEC1-BE4max-CGG", "evo-CDA1-BE4max-CGG",
"ABE8.20-m-CGG"))
ggplot(gg) +
aes(x = nom, y = Occurences/Depth, color = rep) +
ggtitle("C:G -> T:A") +
xlab("Mutator") +
ylab("variant read / total") +
#geom_jitter(alpha = 0.5) +
geom_boxplot(alpha = 0.5, outlier.size=0, outlier.shape=NA) +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_discrete(name ="Mutator",
limits=c("pSEVA221", "T7", "AID-T7", "pmCDAI-T7", "rAPOBEC1-T7",
"TadA*-T7", "evoAPOBEC1-BE4max-T7", "evo-CDA1-BE4max-T7",
"ABE8.20-m-T7", "pSEVA471", "CGG", "AID-CGG", "pmCDA1-CGG", "rAPOBEC1-CGG",
"TadA*-CGG", "evoAPOBEC1-BE4max-CGG", "evo-CDA1-BE4max-CGG",
"ABE8.20-m-CGG"))
gg = data.frame(data[((data$Ref %in% c('C', 'G')) & data$Mutation %in% c("T", "A") & data$Depth > 500),])
nom = c()
rep = c()
for (i in 1:nrow(gg)) {
nom = c(nom, trans$mut[trans$id == substring(as.character(gg$Sample[i]), 9, 11)])
rep = c(rep, substring(as.character(gg$Sample[i]), 1, 1))
}
gg[["nom"]] = nom
gg[['rep']] = rep
ggplot(gg) +
aes(x = nom, y = Occurences/Depth, color = rep) +
ggtitle("C:G -> T:A") +
xlab("Mutator") +
ylab("variant read / total") +
geom_jitter(alpha = 0.5) +
geom_boxplot(alpha = 0.5, outlier.size=0, outlier.shape=NA) +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_discrete(name ="Mutator",
limits=c("pSEVA221", "T7", "AID-T7", "pmCDAI-T7", "rAPOBEC1-T7",
"TadA*-T7", "evoAPOBEC1-BE4max-T7", "evo-CDA1-BE4max-T7",
"ABE8.20-m-T7", "pSEVA471", "CGG", "AID-CGG", "pmCDA1-CGG", "rAPOBEC1-CGG",
"TadA*-CGG", "evoAPOBEC1-BE4max-CGG", "evo-CDA1-BE4max-CGG",
"ABE8.20-m-CGG"))
ggA = ggplot(gg[gg$rep == "A",]) +
aes(x = nom, y = Occurences/Depth) +
ggtitle("C:G -> T:A") +
xlab("Mutator") +
ylab("variant read / total") +
geom_jitter() +
geom_boxplot(alpha = 0.5, outlier.size=0, outlier.shape=NA) +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_discrete(name ="Mutator",
limits=c("pSEVA221", "T7", "AID-T7", "pmCDAI-T7", "rAPOBEC1-T7",
"TadA*-T7", "evoAPOBEC1-BE4max-T7", "evo-CDA1-BE4max-T7",
"ABE8.20-m-T7", "pSEVA471", "CGG", "AID-CGG", "pmCDA1-CGG", "rAPOBEC1-CGG",
"TadA*-CGG", "evoAPOBEC1-BE4max-CGG", "evo-CDA1-BE4max-CGG",
"ABE8.20-m-CGG"))
ggB = ggplot(gg[gg$rep == "D",]) +
aes(x = nom, y = Occurences/Depth) +
ggtitle("C:G -> T:A") +
xlab("Mutator") +
ylab("variant read / total") +
geom_jitter() +
geom_boxplot(alpha = 0.5, outlier.size=0, outlier.shape=NA) +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
scale_x_discrete(name ="Mutator",
limits=c("pSEVA221", "T7", "AID-T7", "pmCDAI-T7", "rAPOBEC1-T7",
"TadA*-T7", "evoAPOBEC1-BE4max-T7", "evo-CDA1-BE4max-T7",
"ABE8.20-m-T7", "pSEVA471", "CGG", "AID-CGG", "pmCDA1-CGG", "rAPOBEC1-CGG",
"TadA*-CGG", "evoAPOBEC1-BE4max-CGG", "evo-CDA1-BE4max-CGG",
"ABE8.20-m-CGG"))
ggA
ggD
ggB
View(gg)
View(data)
ortho1 = data.frame(data[data$Depth > 500,])
# orthogonalitÃ©
ortho1 = data.frame(data[data$Depth > 500,])
nom = c()
rep = c()
zone = c()
for (i in 1:nrow(ortho1)) {
nom = c(nom, trans$mut[trans$id == substring(as.character(ortho1$Sample[i]), 9, 11)])
rep = c(rep, substring(as.character(ortho1$Sample[i]), 1, 1))
if (ortho1$Position > 3126 || ortho1$Position < 135){
zone = c(zone, "non_targeted")
}else {
zone = c(zone, "targeted")
}
}
ortho1[["nom"]] = nom
ortho1[['rep']] = rep
ortho1[['zone']] = zone
View(ortho1)
nom = c()
rep = c()
zone = c()
for (i in 1:nrow(ortho1)) {
#nom = c(nom, trans$mut[trans$id == substring(as.character(ortho1$Sample[i]), 9, 11)])
#rep = c(rep, substring(as.character(ortho1$Sample[i]), 1, 1))
if (ortho1$Position > 3126 | ortho1$Position < 135){
zone = c(zone, "non_targeted")
}else {
zone = c(zone, "targeted")
}
}
warning()
warnings()
nom = c()
rep = c()
zone = c()
for (i in 1:nrow(ortho1)) {
#nom = c(nom, trans$mut[trans$id == substring(as.character(ortho1$Sample[i]), 9, 11)])
#rep = c(rep, substring(as.character(ortho1$Sample[i]), 1, 1))
if (ortho1$Position < 3126 & ortho1$Position > 135){
zone = c(zone, "targeted")
}else {
zone = c(zone, "non-targeted")
}
}
zone
ortho1$Position
summary(ortho1)
nom = c()
rep = c()
zone = c()
for (i in 1:nrow(ortho1)) {
#nom = c(nom, trans$mut[trans$id == substring(as.character(ortho1$Sample[i]), 9, 11)])
#rep = c(rep, substring(as.character(ortho1$Sample[i]), 1, 1))
if (ortho1$Position < 3126 & ortho1$Position > 135){
zone = c(zone, "targeted")
}
else {
zone = c(zone, "non-targeted")
}
}
warnings()
nom = c()
rep = c()
zone = c()
for (i in 1:nrow(ortho1)) {
#nom = c(nom, trans$mut[trans$id == substring(as.character(ortho1$Sample[i]), 9, 11)])
#rep = c(rep, substring(as.character(ortho1$Sample[i]), 1, 1))
if (ortho1$Position[i] < 3126 & ortho1$Position[i] > 135){
zone = c(zone, "targeted")
}
else {
zone = c(zone, "non-targeted")
}
}
ortho1[['zone']] = zone
summary(orrtho1)
summary(ortho1)
ortho1[['zone']] = zone
ortho1$nom = as.factor(ortho1$nom)
ortho1$zone = as.factor(ortho1$zone)
ortho1$rep = as.factor(ortho1$rep)
summary(ortho1)
mutator = c()
zone = c()
mutations = c()
for (i in levels(ortho1$mutator)){
for (j in levels(ortho1$zone)){
mutations = c(mutations, sum(ortho1$Occurences[ortho1$nom == i & ortho1$zone == j,])/sum(ortho1$Depth[ortho1$nom == i & ortho1$zone == j,]))
zone = c(zone, j)
mutator = c(mutator, i)
}
}
levels(ortho1$mutator
)
mutator = c()
zone = c()
mutations = c()
for (i in levels(ortho1$nom)){
for (j in levels(ortho1$zone)){
mutations = c(mutations, sum(ortho1$Occurences[ortho1$nom == i & ortho1$zone == j,])/sum(ortho1$Depth[ortho1$nom == i & ortho1$zone == j,]))
zone = c(zone, j)
mutator = c(mutator, i)
}
}
ortho1$Occurences[ortho1$nom == i & ortho1$zone == j,]
ortho1$Occurences[,ortho1$nom == i & ortho1$zone == j]
ortho1$Occurences[(ortho1$nom == i & ortho1$zone == j)]
mutator = c()
zone = c()
mutations = c()
for (i in levels(ortho1$nom)){
for (j in levels(ortho1$zone)){
mutations = c(mutations, sum(ortho1$Occurences[ortho1$nom == i & ortho1$zone == j])/sum(ortho1$Depth[ortho1$nom == i & ortho1$zone == j]))
zone = c(zone, j)
mutator = c(mutator, i)
}
}
ortho = data.frame(mutator = mutator, zone = zone, mutations = mutations)
View(ortho)
ggplot(ortho) +
aes(x = zone, y = mutations) +
geom_boxplot()
ggplot(ortho) +
aes(x = zone, y = mutations, color = mutator) +
geom_jitter()
length("adzedc")
len("sfvdf")
size("sfvdf")
substring("azerty", -1, -3)
substring("azerty", -1, 3)
substring("azerty", -2, 3)
substring("azerty", -5, 3)
substring(i, nchar(i)-3, nchar(i))
substring(i, 1,nchar(i)-2)
substring(i, 1,nchar(i)-3)
mutator = c()
zone = c()
mutations = c()
pol = c()
for (i in levels(ortho1$nom)){
for (j in levels(ortho1$zone)){
mutations = c(mutations, sum(ortho1$Occurences[ortho1$nom == i & ortho1$zone == j])/sum(ortho1$Depth[ortho1$nom == i & ortho1$zone == j]))
zone = c(zone, j)
if (substring(i, nchar(i)-2, nchar(i)) == "-T7"){
mutator = c(mutator, substring(i, 1,nchar(i)-3))
pol = c(pol, "T7")
}
else{
mutator = c(mutator, substring(i, 1,nchar(i)-4))
pol = c(pol, "CGG")
}
}
}
ortho = data.frame(mutator = mutator, zone = zone, mutations = mutations, polymerase = pol)
mutator = c()
zone = c()
mutations = c()
pol = c()
for (i in levels(ortho1$nom)){
for (j in levels(ortho1$zone)){
mutations = c(mutations, sum(ortho1$Occurences[ortho1$nom == i & ortho1$zone == j])/sum(ortho1$Depth[ortho1$nom == i & ortho1$zone == j]))
zone = c(zone, j)
if (substring(i, nchar(i)-2, nchar(i)) == "-T7"){
if (nchar(substring(i, 1,nchar(i)-3)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-3))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "T7")
}
else{
if (nchar(substring(i, 1,nchar(i)-4)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-4))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "CGG")
}
}
}
ortho = data.frame(mutator = mutator, zone = zone, mutations = mutations, polymerase = pol)
ggplot(ortho[ortho$polymerase != "no",]) +
aes(x = zone, y = mutations, fill = polymerase) +
geom_boxplot()
ggplot(ortho[ortho$polymerase != "no",]) +
aes(x = polymerase, y = mutations, fill = zone) +
geom_boxplot()
mutator = c()
zone = c()
mutations = c()
pol = c()
for (i in levels(ortho1$nom)){
for (j in levels(ortho1$zone)){
mutations = c(mutations, (sum(ortho1$Occurences[ortho1$nom == i & ortho1$zone == j])/sum(ortho1$Depth[ortho1$nom == i & ortho1$zone == j]))*1000)
zone = c(zone, j)
if (substring(i, nchar(i)-2, nchar(i)) == "-T7"){
if (nchar(substring(i, 1,nchar(i)-3)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-3))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "T7")
}
else{
if (nchar(substring(i, 1,nchar(i)-4)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-4))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "CGG")
}
}
}
ortho = data.frame(mutator = mutator, zone = zone, mutations = mutations, polymerase = pol)
ggplot(ortho[ortho$polymerase != "no",]) +
aes(x = polymerase, y = mutations, fill = zone) +
xlab("Polymerase") +
ylab("Mutations (/Kb)") +
geom_boxplot()
ggplot(ortho[ortho$polymerase != "no",]) +
aes(x = polymerase, y = mutations, fill = zone) +
xlab("Polymerase") +
ylab("Mutations (/Kb)") +
geom_violin()
ggplot(ortho[ortho$polymerase != "no",]) +
aes(x = polymerase, y = mutations, fill = zone) +
xlab("Polymerase") +
ylab("Mutations (/Kb)") +
geom_jitter()
ggplot(ortho[ortho$polymerase != "no",]) +
aes(x = polymerase, y = mutations, color = zone) +
xlab("Polymerase") +
ylab("Mutations (/Kb)") +
geom_jitter()
ggplot(ortho[ortho$polymerase != "no",]) +
aes(x = polymerase, y = mutations, fill = zone) +
xlab("Polymerase") +
ylab("Mutations (/Kb)") +
geom_boxplot()
library(ggplot2)
setwd("~/Documents/iGEM/analyse_ngs/variant40")
name = c()
pos = c()
ref = c()
var = c()
read_mut = c()
read_tot = c()
file=list.files(pattern = "122_10")
for (i in file){
tmp = read.csv2(i, sep = "\t")
name = c(name, rep(substring(i, 1,11), nrow(tmp)))
pos = c(pos, tmp$Position)
ref = c(ref, tmp$Ref)
var = c(var, tmp$VarAllele)
read_mut = c(read_mut, tmp$Reads2)
read_tot = c(read_tot, tmp$Reads1 + tmp$Reads2)
}
data = data.frame(Sample = name, Position = pos, Ref = ref, Mutation = var,  Occurences = read_mut, Depth = read_tot)
data = data[data$Ref %in% c("A", "T", "C", "G"),]
write.csv2(data, file = "donneees_ngs_variantcall.csv", sep = ";", dec = ",")
data$Sample = as.factor(data$Sample)
gg = data.frame(data[((data$Ref %in% c('C', 'G')) & data$Mutation %in% c("T", "A") & data$Depth > 500),])
#gg = data.frame(data[(data$Depth > 500),])
mutator = c()
zone = c()
mutations = c()
pol = c()
for (i in levels(ortho1$nom)){
for (j in levels(ortho1$zone)){
mutations = c(mutations, (sum(ortho1$Occurences[ortho1$nom == i & ortho1$zone == j])/sum(ortho1$Depth[ortho1$nom == i & ortho1$zone == j]))*1000)
zone = c(zone, j)
if (substring(i, nchar(i)-2, nchar(i)) == "-T7"){
if (nchar(substring(i, 1,nchar(i)-3)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-3))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "T7")
}
else{
if (nchar(substring(i, 1,nchar(i)-4)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-4))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "CGG")
}
}
}
ortho = data.frame(mutator = mutator, zone = zone, mutations = mutations, polymerase = pol)
ggplot(ortho[ortho$polymerase != "no",]) +
aes(x = polymerase, y = mutations, fill = zone) +
xlab("Polymerase") +
ylab("Mutations (/Kb)") +
geom_boxplot()
# orthogonalitÃ©
ortho1 = data.frame(data[data$Depth > 500,])
nom = c()
rep = c()
zone = c()
for (i in 1:nrow(ortho1)) {
#nom = c(nom, trans$mut[trans$id == substring(as.character(ortho1$Sample[i]), 9, 11)])
#rep = c(rep, substring(as.character(ortho1$Sample[i]), 1, 1))
if (ortho1$Position[i] < 3126 & ortho1$Position[i] > 135){
zone = c(zone, "targeted")
}
else {
zone = c(zone, "non-targeted")
}
}
ortho1[["nom"]] = nom
ortho1[['rep']] = rep
ortho1[['zone']] = zone
ortho1$nom = as.factor(ortho1$nom)
ortho1$zone = as.factor(ortho1$zone)
ortho1$rep = as.factor(ortho1$rep)
mutator = c()
zone = c()
mutations = c()
pol = c()
for (i in levels(ortho1$nom)){
for (j in levels(ortho1$zone)){
mutations = c(mutations, (sum(ortho1$Occurences[ortho1$nom == i & ortho1$zone == j])/sum(ortho1$Depth[ortho1$nom == i & ortho1$zone == j]))*1000)
zone = c(zone, j)
if (substring(i, nchar(i)-2, nchar(i)) == "-T7"){
if (nchar(substring(i, 1,nchar(i)-3)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-3))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "T7")
}
else{
if (nchar(substring(i, 1,nchar(i)-4)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-4))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "CGG")
}
}
}
ortho = data.frame(mutator = mutator, zone = zone, mutations = mutations, polymerase = pol)
ggplot(ortho[ortho$polymerase != "no",]) +
aes(x = polymerase, y = mutations, fill = zone) +
xlab("Polymerase") +
ylab("Mutations (/Kb)") +
geom_boxplot()
ortho1 = data.frame(data[data$Depth > 500,])
View(ortho1)
ortho1 = data.frame(data[data$Depth > 20,])
nom = c()
rep = c()
zone = c()
for (i in 1:nrow(ortho1)) {
#nom = c(nom, trans$mut[trans$id == substring(as.character(ortho1$Sample[i]), 9, 11)])
#rep = c(rep, substring(as.character(ortho1$Sample[i]), 1, 1))
if (ortho1$Position[i] < 3126 & ortho1$Position[i] > 135){
zone = c(zone, "targeted")
}
else {
zone = c(zone, "non-targeted")
}
}
ortho1[["nom"]] = nom
ortho1[['rep']] = rep
ortho1[['zone']] = zone
View(ortho1)
nom = c()
rep = c()
zone = c()
for (i in 1:nrow(ortho1)) {
nom = c(nom, trans$mut[trans$id == substring(as.character(ortho1$Sample[i]), 9, 11)])
rep = c(rep, substring(as.character(ortho1$Sample[i]), 1, 1))
if (ortho1$Position[i] < 3126 & ortho1$Position[i] > 135){
zone = c(zone, "targeted")
}
else {
zone = c(zone, "non-targeted")
}
}
ortho1[["nom"]] = nom
ortho1[['rep']] = rep
ortho1[['zone']] = zone
ortho1$nom = as.factor(ortho1$nom)
ortho1$zone = as.factor(ortho1$zone)
ortho1$rep = as.factor(ortho1$rep)
mutator = c()
zone = c()
mutations = c()
pol = c()
for (i in levels(ortho1$nom)){
for (j in levels(ortho1$zone)){
mutations = c(mutations, (sum(ortho1$Occurences[ortho1$nom == i & ortho1$zone == j])/sum(ortho1$Depth[ortho1$nom == i & ortho1$zone == j]))*1000)
zone = c(zone, j)
if (substring(i, nchar(i)-2, nchar(i)) == "-T7"){
if (nchar(substring(i, 1,nchar(i)-3)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-3))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "T7")
}
else{
if (nchar(substring(i, 1,nchar(i)-4)) > 0){
mutator = c(mutator, substring(i, 1,nchar(i)-4))
}
else {
mutator = c(mutator, "no")
}
pol = c(pol, "CGG")
}
}
}
ortho = data.frame(mutator = mutator, zone = zone, mutations = mutations, polymerase = pol)
ggplot(ortho[ortho$polymerase != "no",]) +
aes(x = polymerase, y = mutations, fill = zone) +
xlab("Polymerase") +
ylab("Mutations (/Kb)") +
geom_boxplot()
View(ortho)
